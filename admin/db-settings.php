<?php# ==============================================================================================# Connect to the database for the Email Templates - used in ost-emailtemp & ost-postreplymail# ==============================================================================================global $wpdb; $ostemail = $wpdb->prefix . "ost_emailtemp"; $adminreply=$wpdb->get_row("SELECT id,name,$ostemail.subject,$ostemail.text,created,updated FROM $ostemail where name = 'Admin-Response'");$form_admintreply_subject=$adminreply->subject; $adminreply=$adminreply->text;$arname='Admin-Response';$postsubmail=$wpdb->get_row("SELECT id,name,$ostemail.subject,text,created,updated FROM $ostemail where name = 'Admin-Response'"); $postsubmail=$postsubmail->subject;$newticket=$wpdb->get_row("SELECT id,name,$ostemail.subject,$ostemail.text,created,updated FROM $ostemail where name = 'New-Ticket'"); $form_newticket_subject=$newticket->subject;$newticket=$newticket->text; $ntname='New-Ticket';$postconfirm=$wpdb->get_row("SELECT id,name,$ostemail.subject,$ostemail.text,created,updated FROM $ostemail where name = 'Post-Confirmation'"); $form_postconfirmed_subject=$postconfirm->subject; $postconfirm=$postconfirm->text; $pcname='Post-Confirmation';$poconsubmail=$wpdb->get_row("SELECT id,name,$ostemail.subject,text,created,updated FROM $ostemail where name = 'Post-Confirmation'"); $poconsubmail=$poconsubmail->subject;//Admin Create Ticket Template Start Here$ostemail = $wpdb->prefix . "ost_emailtemp";$adminnewticket = $wpdb->get_row("SELECT id,name,$ostemail.subject,$ostemail.text,created,updated FROM $ostemail where name = 'Admin-New-Ticket'");$adminnewticket_text = $adminnewticket->text;$adminnewticket_subject = $adminnewticket->subject;$antname='Admin-New-Ticket';//Admin Create Ticket Template End Here# ==============================================================================================# Open os_ticket_config in wp_options so we can connect to osTicket v1.9+# ==============================================================================================$config = get_option('os_ticket_config');extract($config);$ost_wpdb = new wpdb($username, $password, $database, $host);global $ost;$config_table=$keyost_prefix."config";$dept_table=$keyost_prefix."department";$topic_table=$keyost_prefix."help_topic";$ost_email=$keyost_prefix."email";$email_temp_table=$keyost_prefix."email_template";$ticket_table=$keyost_prefix."ticket";if($keyost_version==1914){	$thread_table = $keyost_prefix . "thread";	$thread_entry = $keyost_prefix . "thread_entry";	$ost_attachment = $keyost_prefix . "attachment";	$ticket_event_table = $keyost_prefix . "thread_event";}else{	$thread_table = $keyost_prefix . "ticket_thread";	$ost_ticket_attachment = $keyost_prefix . "ticket_attachment";	$ticket_event_table = $keyost_prefix . "ticket_event";}$priority_table=$keyost_prefix."ticket_priority";$ticket_cdata=$keyost_prefix."ticket__cdata";$staff_table=$keyost_prefix."staff";$ost_user=$keyost_prefix."user";$ost_useremail=$keyost_prefix."user_email";$ost_ticket_status=$keyost_prefix."ticket_status";$ost_file=$keyost_prefix."file";$ost_canned_response=$keyost_prefix."canned_response";$ost_faq_category=$keyost_prefix . "faq_category";$ost_faq_topic=$keyost_prefix . "faq_topic";$ost_faq=$keyost_prefix . "faq";$directory=$config['supportpage'];$dirname = strtolower($directory);$category=@$_GET['cat'];$status_opt=@$_GET['status'];$ticket=@$_GET['ticket'];# ==============================================================================================# Changed (id) -> (like) so we search for text in v1.8+# ==============================================================================================// License Start Here$count_key4celicensekey=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%key4celicensekey%');");if($count_key4celicensekey == 0){   $id = '';   $namespace = "plugin";   $key = "key4celicensekey";   $rows_affected = $ost_wpdb->insert(   $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );   }$id_key4celicensekey=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%key4celicensekey%');");$key4celicensekey=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_key4celicensekey");$key4celicensekey=$key4celicensekey->value;// License End Here// Display Departments From Start Here$count_dipslay_department_from=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%dipslay_department_from%');");if($count_dipslay_department_from == 0){   $id = '';   $namespace = "core";   $key = "dipslay_department_from";   $rows_affected = $ost_wpdb->insert(   $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );   }$id_dipslay_department_from=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%dipslay_department_from%');");$dipslay_department_from=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_dipslay_department_from");$dipslay_department_from=$dipslay_department_from->value;// Display Departments From End Here// Display Departments To Start Here$count_dipslay_department_to=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%dipslay_department_to%');");if($count_dipslay_department_to == 0){   $id = '';   $namespace = "core";   $key = "dipslay_department_to";   $rows_affected = $ost_wpdb->insert(   $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );   }$id_dipslay_department_to=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%dipslay_department_to%');");$dipslay_department_to=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_dipslay_department_to");$dipslay_department_to=$dipslay_department_to->value;// Display Departments To End Here$id_isonline=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%isonline%');");$isactive=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_isonline");$isactive=$isactive->value;$id_helptitle=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%helpdesk_title%');");$title_name=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id =$id_helptitle");$title_name=$title_name->value;$table_name_config = $keyost_prefix."config";// STMP Status Start Here By Pratik Maniar$count_smtp_status=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_status%');");if($count_smtp_status == 0){   $id = '';   $namespace = "core";   $key = "smtp_status";   $rows_affected = $ost_wpdb->insert(   $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => 'disable',               'updated' => current_time('mysql')           ) );   }$id_smtp_status=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_status%');");$smtp_status=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_status");$smtp_status=$smtp_status->value;// STMP Status End Here By Pratik Maniar// STMP Username Start Here By Pratik Maniar$count_smtp_username=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_username%');");if($count_smtp_username == 0){   $id = '';   $namespace = "core";   $key = "smtp_username";     $rows_affected = $ost_wpdb->insert(    $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );}$id_smtp_username=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_username%');");$smtp_username=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_username");$smtp_username=$smtp_username->value;// STMP Username End Here By Pratik Maniar// STMP Password Start Here By Pratik Maniar$count_smtp_password=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_password%');");if($count_smtp_password == 0){   $id = '';   $namespace = "core";   $key = "smtp_password";     $rows_affected = $ost_wpdb->insert(    $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')               ) );}$id_smtp_password=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_password%');");$smtp_password=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_password");$smtp_password=$smtp_password->value;// STMP Password End Here By Pratik Maniar// STMP Host Start Here By Pratik Maniar$count_smtp_host=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_host%');");if($count_smtp_host == 0){   $id = '';   $namespace = "core";   $key = "smtp_host";     $rows_affected = $ost_wpdb->insert(    $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')               ) );}$id_smtp_host=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_host%');");$smtp_host=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_host");$smtp_host=$smtp_host->value;// STMP Host End Here By Pratik Maniar// STMP Port Start Here By Pratik Maniar$count_smtp_port=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_port%');");if($count_smtp_port == 0){   $id = '';   $namespace = "core";   $key = "smtp_port";     $rows_affected = $ost_wpdb->insert(    $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );}$id_smtp_port=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_port%');");$smtp_port=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_port");$smtp_port=$smtp_port->value;// SMTP Port End Here By Pratik Maniar// STMP Secure Start Here By Pratik Maniar$count_smtp_secure=$ost_wpdb->get_var("SELECT count(*) FROM $config_table WHERE $config_table.key like ('%smtp_secure%');");if($count_smtp_secure == 0){   $id = '';   $namespace = "core";   $key = "smtp_secure";     $rows_affected = $ost_wpdb->insert(    $config_table,           array(               'id' => $id,               'namespace' => $namespace,               'key' => $key,               'value' => '',               'updated' => current_time('mysql')           ) );}$id_smtp_secure=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%smtp_secure%');");$smtp_secure=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_smtp_secure");$smtp_secure=$smtp_secure->value;// SMTP Secure End Here By Pratik Maniar$id_maxopen=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%max_open_tickets%');");$max_open_tickets=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_maxopen");$max_open_tickets=$max_open_tickets->value;$id_ademail=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%admin_email%');");$os_admin_email=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_ademail");$os_admin_email=$os_admin_email->value;$admin_info=$ost_wpdb->get_row("SELECT firstname,lastname FROM $staff_table WHERE staff_id = 1");$admin_fname=$admin_info->firstname;$admin_lname=$admin_info->lastname;$id_hidename=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%hide_staff_name%');");$hidename=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_hidename");@$hidename=$hidename->value;$id_replysep=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%reply_separator%');");$reply_sep=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_replysep");$reply_sep=$reply_sep->value;$id_reply_mailOver=$ost_wpdb->get_var("SELECT id FROM $config_table WHERE $config_table.key like ('%reply_mailOverride%');");if($id_reply_mailOver!=""){    $reply_mailOver=$ost_wpdb->get_row("SELECT id,namespace,$config_table.key,$config_table.value,updated FROM $config_table where id = $id_reply_mailOver");    $reply_mailOver=$reply_mailOver->value;}$id_ticketreply=$ost_wpdb->get_var("SELECT id FROM $email_temp_table WHERE $email_temp_table.code_name like ('%ticket.reply%');");$ticketreply=$ost_wpdb->get_row("SELECT id,tpl_id,code_name,subject,body,notes,created,updated FROM $email_temp_table where id = $id_ticketreply");$ticketreply=$ticketreply->body;# ==============================================================================================# Collecting info needed for ticket count & search box# ==============================================================================================if($keyost_version==194 || $keyost_version==195 || $keyost_version==1951){	$ticket_count_all = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table	LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id	INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id");}else{	$ticket_count_all = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table	LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id	INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id");}if($keyost_version==194 || $keyost_version==195 || $keyost_version==1951){    $ticket_count_open = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id     INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id    WHERE $ost_ticket_status.state='open' AND $ticket_table.isanswered='0'");    $ticket_count_answered = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table        LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id        INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id        INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id        WHERE $ost_ticket_status.state='open' AND $ticket_table.isanswered='1'");        $ticket_count_closed = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table        LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id        INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id        INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id        WHERE $ost_ticket_status.state='closed'");}else if($keyost_version==1914){	$ticket_count_open = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id     INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id    WHERE $ost_ticket_status.state='open' AND $ticket_table.isanswered='0'");    $ticket_count_answered = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table        LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id        INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id        INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id        WHERE $ost_ticket_status.state='open' AND $ticket_table.isanswered='1'");        $ticket_count_closed = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table        LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id        INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id        INNER JOIN $ost_ticket_status ON $ost_ticket_status.id=$ticket_table.status_id        WHERE $ost_ticket_status.state='closed'");}else{    $ticket_count_open = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id WHERE $ticket_table.status='open' AND $ticket_table.isanswered='0'");$ticket_count_answered = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id WHERE $ticket_table.status='open' AND $ticket_table.isanswered='1'");$ticket_count_closed = $ost_wpdb->get_var("SELECT COUNT(*) FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id WHERE $ticket_table.status='closed'");}# ==============================================================================================# Collecting info for threads listed in ost-ticketview# ==============================================================================================if($keyost_version==194 || $keyost_version==195 || $keyost_version==1951){    $ticketinfo=$ost_wpdb->get_row("SELECT $topic_table.topic,$thread_table.poster,$ticket_table.user_id,$ticket_table.number,$ticket_table.created,$ticket_table.ticket_id,$ticket_table.isanswered,$ost_user.name,$dept_table.dept_name,$ost_ticket_status.state as status,$ticket_cdata.priority,$ticket_cdata.subject,$ost_useremail.address FROM $ticket_table     INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id     INNER JOIN $ost_user ON $ost_user.id=$ticket_table.user_id    INNER JOIN $thread_table ON $thread_table.ticket_id=$ticket_table.ticket_id    INNER JOIN $ost_useremail ON $ost_useremail.user_id=$ticket_table.user_id    INNER JOIN $ost_ticket_status ON $ost_ticket_status.id = $ticket_table.status_id    LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id    LEFT JOIN $ticket_cdata on $ticket_cdata.ticket_id = $ticket_table.ticket_id WHERE `number` ='$ticket'");}else if($keyost_version==1914){    $ticketinfo=$ost_wpdb->get_row("SELECT $topic_table.topic,$thread_entry.poster,$ticket_table.user_id,	$ticket_table.number,	$ticket_table.created,	$ticket_table.ticket_id,	$ticket_table.isanswered,	$ost_user.name,	$dept_table.name as dept_name,	$ost_ticket_status.state as status,	$ticket_cdata.priority,	$ticket_cdata.subject,	$ost_useremail.address FROM $ticket_table     INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id     INNER JOIN $ost_user ON $ost_user.id=$ticket_table.user_id    INNER JOIN $thread_table ON $thread_table.object_id=$ticket_table.ticket_id	INNER JOIN $thread_entry ON $thread_entry.id = $thread_table.id    INNER JOIN $ost_useremail ON $ost_useremail.user_id=$ticket_table.user_id    INNER JOIN $ost_ticket_status ON $ost_ticket_status.id = $ticket_table.status_id    LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id    LEFT JOIN $ticket_cdata on $ticket_cdata.ticket_id = $ticket_table.ticket_id WHERE `number` ='$ticket'");}else{    $ticketinfo=$ost_wpdb->get_row("SELECT $topic_table.topic,$ticket_table.user_id,$ticket_table.number,$ticket_table.created,$ticket_table.ticket_id,$ticket_table.status,$ticket_table.isanswered,$ost_user.name,$dept_table.dept_name,$ticket_cdata.priority,$ticket_cdata.priority_id,$ticket_cdata.subject,$ost_useremail.address FROM $ticket_table INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id INNER JOIN $ost_user ON $ost_user.id=$ticket_table.user_id INNER JOIN $ost_useremail ON $ost_useremail.user_id=$ticket_table.user_id LEFT JOIN $ticket_cdata on $ticket_cdata.ticket_id = $ticket_table.ticket_id WHERE `number` ='$ticket'");}if($keyost_version==1914){	$threadinfo=$ost_wpdb->get_results("SELECT $ost_useremail.address,				$thread_entry.created,				$thread_entry.id,				$thread_entry.user_id,				$thread_entry.staff_id,				$thread_entry.type as thread_type,				$thread_entry.body,				$thread_entry.title,				$thread_entry.poster				FROM $thread_table 				inner join $ticket_table on $thread_table.object_id = $ticket_table.ticket_id 				inner join $thread_entry on $thread_table.id = $thread_entry.thread_id 				inner join ".$keyost_prefix."user_email on ".$keyost_prefix."user_email.user_id = $ticket_table.user_id				where number = '$ticket' 				ORDER BY  $thread_entry.id ASC");	/*$threadinfo=$ost_wpdb->get_results("	SELECT $thread_table.created, $thread_entry.title, $thread_table.id, $thread_table.object_id, $thread_entry.type, $thread_entry.body, $thread_entry.poster	FROM $thread_table	INNER JOIN $thread_entry ON $thread_entry.id = $thread_table.id	INNER JOIN $ticket_table ON $thread_table.object_id = $ticket_table.ticket_id	where number = '$ticket'	ORDER BY  $thread_table.id ASC");		*/}else{$threadinfo=$ost_wpdb->get_results("	SELECT $thread_table.created,$thread_table.title,$thread_table.id,$thread_table.ticket_id,$thread_table.thread_type,$thread_table.body,$thread_table.poster 	FROM $thread_table 	inner join $ticket_table on $thread_table.ticket_id = $ticket_table.ticket_id			where number = '$ticket'	ORDER BY  $thread_table.id ASC");	}$pri_opt = $ost_wpdb->get_results("SELECT priority_desc,priority_id FROM $priority_table");$canned_responces=$ost_wpdb->get_results("SELECT canned_id, response, title FROM $ost_canned_response WHERE isenabled =1");# ==============================================================================================# Searching for tickets to diplay in ost-tickets# ==============================================================================================$isanswered="";if(isset($_REQUEST['search'])){    @$search=@$_REQUEST['tq'];}if(isset($_POST['action']))    $arr = explode('.', $_POST['action']);if(!$status_opt && ($status_opt!="all")) {	$status_opt='open';	$isanswered='0'; }if(!$status_opt && ($status_opt=="all"))	$status_opt='';if($status_opt=="open") {	$status_opt='open';	$isanswered='0'; }elseif($status_opt=="answered") {	$status_opt='open';	$isanswered='1'; }elseif($status_opt=="closed") {	$status_opt='closed';	}if($keyost_version==194 || $keyost_version==195 || $keyost_version==1951){    $sql="SELECT $topic_table.topic,$ticket_table.user_id,$ticket_table.number,$ticket_table.created, $ticket_table.updated, $ticket_table.ticket_id,$ticket_table.isanswered,$ticket_cdata.subject,$ticket_cdata.priority, $dept_table.dept_name    FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id    LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id    INNER JOIN $ost_ticket_status ON $ost_ticket_status.id = $ticket_table.status_id";}else if($keyost_version==1914){    $sql="SELECT $topic_table.topic,$ticket_table.user_id,$ticket_table.number,$ticket_table.created, $ticket_table.updated, $ticket_table.ticket_id,$ticket_table.isanswered,$ticket_cdata.subject,$ticket_cdata.priority, $dept_table.name    FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    INNER JOIN $dept_table ON $dept_table.id=$ticket_table.dept_id    LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id    INNER JOIN $ost_ticket_status ON $ost_ticket_status.id = $ticket_table.status_id";}else{    $sql="SELECT $topic_table.topic,$ticket_table.user_id,$ticket_table.number,$ticket_table.created, $ticket_table.updated, $ticket_table.ticket_id, $ticket_table.status,$ticket_table.isanswered,$ticket_cdata.subject,$ticket_cdata.priority_id, $dept_table.dept_name    FROM $ticket_table    LEFT JOIN $ticket_cdata ON $ticket_cdata.ticket_id = $ticket_table.ticket_id    LEFT JOIN $topic_table ON $topic_table.topic_id=$ticket_table.topic_id    INNER JOIN $dept_table ON $dept_table.dept_id=$ticket_table.dept_id";}if($category && ($category!="all"))    $sql.=" and $topic_table.topic_id = '".$category."'";if($status_opt && ($status_opt!="all") && @$search==""){	if($keyost_version==194 || $keyost_version==195 || $keyost_version==1951 || $keyost_version==1914){		$sql.=" and $ost_ticket_status.state = '".$status_opt."'";	}	else{		$sql.=" and $ticket_table.status = '".$status_opt."'";	}	if($isanswered!="")		$sql.= " and $ticket_table.isanswered = '".$isanswered."'";			}if(@$search && (@$search!=""))    $sql.=" and ($ticket_table.number like '%".$search."%' or $ost_ticket_status.state like '%".$search."%' or $ticket_cdata.subject like '%".$search."%' or $dept_table.dept_name like '%".$search."%')";    $sql.=" GROUP BY $ticket_table.ticket_id";  if(isset($_POST['action']) && $arr[0]=='ascen')    $sql.=" ORDER BY $arr[1] ASC, $ticket_table.updated ASC";else if(isset($_POST['action']) && $arr[0]=='desc')    $sql.=" ORDER BY $arr[1] DESC, $ticket_table.updated DESC";else    $sql.=" ORDER BY $ticket_table.ticket_id DESC";    $ost_wpdb->get_results($sql);    @$numrows = $ost_wpdb->num_rows;    $rowsperpage = 10;    $totalpages = ceil($numrows / $rowsperpage);if (isset($_REQUEST['currentpage']) && is_numeric($_REQUEST['currentpage'])) {$currentpage = (int) $_GET['currentpage'];} else {$currentpage = 1;}if ($currentpage > $totalpages) {$currentpage = $totalpages;}if ($currentpage < 1) {$currentpage = 1;}$offset = ($currentpage - 1) * $rowsperpage;$sql.=" LIMIT $offset, $rowsperpage";$list_opt = $ost_wpdb->get_results($sql);# ==============================================================================================# Update Database - osT-Settings# ==============================================================================================if(isset($_REQUEST['ost-settings'])) {    $online=$_POST['online'];    $title_name=$_POST['title_name'];//SMTP Setting Changes Post Variables Start Here Added By Pratik Maniar    $smtp_status=$_POST['smtp_status'];    $smtp_username=$_POST['smtp_username'];    $smtp_password=$_POST['smtp_password'];    $smtp_host=$_POST['smtp_host'];    $smtp_port=$_POST['smtp_port'];	$smtp_secure=$_POST['smtp_secure'];//SMTP Setting Changes Post Variables End Here Added By Pratik Maniar    $max_open_tickets=$_POST['max_open_tickets'];    $reply_sep=$_POST['reply_sep'];    $hidename=@$_POST['hidename'];    $os_admin_email=@$_POST['admin_email'];    $admin_fname=@$_POST['admin_fname'];    $admin_lname=@$_POST['admin_lname'];    $adfullname=@$_POST['adname'];    $ost_wpdb->update($config_table, array('value'=>$online), array('id'=>$id_isonline), array('%d'));    $ost_wpdb->update($config_table, array('value'=>$title_name), array('id'=>$id_helptitle), array('%s'));//SMTP Setting Changes Query Start Here Added By Pratik Maniar    $ost_wpdb->update($config_table, array('value'=>$smtp_status), array('id'=>$id_smtp_status), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$smtp_username), array('id'=>$id_smtp_username), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$smtp_password), array('id'=>$id_smtp_password), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$smtp_host), array('id'=>$id_smtp_host), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$smtp_port), array('id'=>$id_smtp_port), array('%s'));	$ost_wpdb->update($config_table, array('value'=>$smtp_secure), array('id'=>$id_smtp_secure), array('%s'));//SMTP Setting Changes Query End Here Added By Pratik Maniar    $ost_wpdb->update($config_table, array('value'=>$max_open_tickets), array('id'=>$id_maxopen), array('%d'));    $ost_wpdb->update($config_table, array('value'=>$os_admin_email), array('id'=>$id_ademail), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$reply_sep), array('id'=>$id_replysep), array('%s'));    $ost_wpdb->update($config_table, array('value'=>$hidename), array('id'=>$id_hidename), array('%d'));    $ost_wpdb->update($staff_table, array('firstname'=>$admin_fname), array('staff_id'=>1), array('%s'));    $ost_wpdb->update($staff_table, array('lastname'=>$admin_lname), array('staff_id'=>1), array('%s'));    $ost_wpdb->update($ost_user, array('name'=>$adfullname), array('id'=>1), array('%s'));    $ost_wpdb->update($ost_useremail, array('address'=>$os_admin_email), array('user_id'=>1), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="green"><b><?php echo __("Settings", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("are being updated...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-sett.js';?>"></script></center></p><?php }# ==============================================================================================# Admin Post To Ticket Thread - used in ost-ticketveiw# ==============================================================================================if(isset($_REQUEST['ost-post-reply'])) { 	if (($_REQUEST['message']=="")){            echo '<div id="failed"><b>'.__("Error:", 'key4ce-osticket-bridge').'</b>'.__("Message field cannot be empty, if you are closing the ticket, then enter: \"Closing Ticket\" in post a reply.", 'key4ce-osticket-bridge').'</div><div style="clear: both"></div>';	} else {	require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/admin/ost-postreplymail.php' );?><div id="key4ce_succes" class="key4ce_fade"><?php echo __("Thread updated successfully...Stand by: for auto refresh!", 'key4ce-osticket-bridge'); ?></div><div style="clear: both"></div><script type="text/javascript" charset="utf-8">  window.setTimeout(function() {    parent.location = "admin.php?page=ost-tickets&service=view&ticket=<?php echo $ticketinfo->number; ?>";  }, 5050);</script><?php } } # ==============================================================================================# Admin Note To Ticket Thread - used in ost-ticketveiw# ==============================================================================================if(isset($_REQUEST['ost-post-note'])) { 	if (($_REQUEST['note']=="")){            echo '<div id="failed"><b>'.__("Error:", 'key4ce-osticket-bridge').'</b>'.__("Internal Note field cannot be empty, if you are closing the ticket, then enter: \"Closing Ticket\" in post a reply.", 'key4ce-osticket-bridge').'</div><div style="clear: both"></div>';	} else {	require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/admin/ost-postreplymail.php' );?><div id="key4ce_succes" class="key4ce_fade"><?php echo __("Thread updated successfully...Stand by: for auto refresh!", 'key4ce-osticket-bridge'); ?></div><div style="clear: both"></div><script type="text/javascript" charset="utf-8">  window.setTimeout(function() {    parent.location = "admin.php?page=ost-tickets&service=view&ticket=<?php echo $ticketinfo->number; ?>";  }, 5050);</script><?php } } # ==============================================================================================# Admin Post To Ticket Thread - used in ost-ticketveiw# ==============================================================================================if(isset($_REQUEST['create-admin-ticket'])) { 	if (($_REQUEST['message']=="")){            echo '<div id="failed"><b>'.__("Error:", 'key4ce-osticket-bridge').'</b>'.__("Message field cannot be empty, if you are closing the ticket, then enter: \"Closing Ticket\" in post a reply.", 'key4ce-osticket-bridge').'</div><div style="clear: both"></div>';	} else {            require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/admin/adminticketmail.php' );?><div id="key4ce_succes" class="key4ce_fade"><?php echo __("Ticket created successfully...Stand by: for auto refresh!", 'key4ce-osticket-bridge'); ?></div><div style="clear: both"></div><script type="text/javascript" charset="utf-8">  window.setTimeout(function() {    parent.location = "admin.php?page=ost-tickets&service=list&status=open";  }, 5050);</script><?php } }# ==============================================================================================# Admin Post To Ticket Email Template w/message included - used in ost-emailtemp# ==============================================================================================require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/includes/functions.php' );if(isset($_REQUEST['ost-admin-reply'])) {    $form_admintreply=@Format::stripslashes($_POST['form_admintreply']);    $form_admintreply_subject=@Format::stripslashes($_POST['form_admintreply_subject']);    $etdate=date("Y-m-d, g:i:s");    $wpdb->update($ostemail, array('subject'=>$form_admintreply_subject,'text'=>$form_admintreply,'updated'=>$etdate), array('name'=>$arname), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="key4ce_green"><b><?php echo __("Admin Response Email", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("is being updated...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-email.js';?>"></script></center></p><?php }# ==============================================================================================# New Ticket Email Template - sent to user w/message included - used in ost-emailtemp# ============================================================================================== require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/includes/functions.php' );if(isset($_REQUEST['ost-new-ticket'])) {    $form_newticket=@Format::stripslashes($_POST['form_newticket']);    $form_newticket_subject=@Format::stripslashes($_POST['form_newticket_subject']);    $etdate=date("Y-m-d, g:i:s");    $wpdb->update($ostemail, array('subject'=>$form_newticket_subject,'text'=>$form_newticket,'updated'=>$etdate), array('name'=>$ntname), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="key4ce_green"><b><?php echo __("New Ticket Email", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("is being updated...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-email.js';?>"></script></center></p><?php }# ==============================================================================================# Post Confirmation Email Template - sent to user w/message included - used in ost-emailtemp# ============================================================================================== require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/includes/functions.php' );if(isset($_REQUEST['ost-post-confirmed'])) {    $form_postconfirmed=@Format::stripslashes($_POST['form_postconfirmed']);    $form_postconfirmed_subject=@Format::stripslashes($_POST['form_postconfirmed_subject']);    $etdate=date("Y-m-d, g:i:s");    $wpdb->update($ostemail, array('subject'=>$form_postconfirmed_subject,'text'=>$form_postconfirmed,'updated'=>$etdate), array('name'=>$pcname), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="key4ce_green"><b><?php echo __("User Post Confirmation Email", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("is being updated...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-email.js';?>"></script></center></p><?php }# ==============================================================================================# Admin New Ticket Email Template - sent to user w/message included - used in ost-emailtemp# ============================================================================================== require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/includes/functions.php' );if(isset($_REQUEST['ost-admin-new-ticket'])) {    $form_adminnewticket=@Format::stripslashes($_POST['form_adminnewticket']);    $form_adminnewticket_subject=@Format::stripslashes($_POST['form_adminnewticket_subject']);    $etdate=date("Y-m-d, g:i:s");    $wpdb->update($ostemail, array('subject'=>$form_adminnewticket_subject,'text'=>$form_adminnewticket,'updated'=>$etdate), array('name'=>$antname), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="key4ce_green"><b><?php echo __("Admin Create Ticket Email", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("is being updated...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-email.js';?>"></script></center></p><?php }# ==============================================================================================# # ============================================================================================== require_once( WP_PLUGIN_DIR . '/key4ce-osticket-bridge/includes/functions.php' );if(isset($_REQUEST['ost-kb-syncs'])) {	$categories_faq=$_REQUEST['createcat'];	$author_id = get_current_user_id();	$post_id = -1;	foreach($categories_faq as $category)	{		$cat_data_ary=explode("|",$category);		$category_name=$cat_data_ary[0];		$category_desc=$cat_data_ary[1];		$category_old_id=$cat_data_ary[2];		$faq_new_category = array('cat_name' => $category_name, 'category_description' => $category_desc , 'category_nicename' => '', 'category_parent' => '','taxonomy' => 'key4ce_kb_tax');		$faq_new_category_id = wp_insert_category($faq_new_category,0);		$faq_list=$ost_wpdb->get_results("SELECT question,answer,ispublished  FROM ".$ost_faq." WHERE category_id=".$category_old_id);		foreach($faq_list as $faq)		{			$question=$faq->question;			$answer=$faq->answer;				$post_status=$faq->ispublished;			if($post_status==1)			{				$post_f_status="publish";			}			else			{				$post_f_status="private";			}			$slug = sanitize_title($question);		$title = $question;		// If the page doesn't already exist, then create it		if( null == get_page_by_title( $title ) ) {			// Set the page ID so that we know the page was created successfully			$post_id = wp_insert_post(				array(					'comment_status'	=>	'closed',					'ping_status'		=>	'closed',					'post_author'		=>	$author_id,					'post_name'		=>	$slug,					'post_title'		=>	$title,					'post_status'		=>	$post_f_status,					'post_type'		=>	'key4ce_kb',					'post_content'=>$answer,					'tax_input' => array("key4ce_kb_tax"),				)			);			//not working code start here			$categories_post=array($faq_new_category_id);			$term_taxonomy_ids = wp_set_object_terms($post_id,$categories_post, 'key4ce_kb_tax', true );			//wp_set_post_categories($post_id,$categories_post,'key4ce_kb_tax');			//not working code end here			// Otherwise, we'll stop and set a flag			} else {				// Arbitrarily use -2 to indicate that the page with the title already exists				$post_id = -2;			} // end if		}	}?><p align="center"><i><?php echo __("Stand by while your ", 'key4ce-osticket-bridge'); ?><font color="key4ce_green"><b><?php echo __("We are creating categories and posts...", 'key4ce-osticket-bridge'); ?></b></font></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-kb.js';?>"></script></center></p><?php }# ==============================================================================================# Save Departments - osT-Departments# ==============================================================================================if(isset($_REQUEST['ost-departments'])) {	$post_from_ary=array();	$post_to_ary=array();	if(isset($_POST['from']))		$post_from_ary=$_POST['from'];	if(isset($_POST['to']))		$post_to_ary=$_POST['to'];			if(count($post_from_ary) > 0)		 $from_dept_values=implode(",",$_POST['from']);		  else				$from_dept_values="";		  if(count($post_to_ary) > 0)					$to_dept_values=implode(",",$_POST['to']);		  else				$to_dept_values="";		  $ost_wpdb->update($config_table, array('value'=>$from_dept_values), array('id'=>$id_dipslay_department_from), array('%s'));		  $ost_wpdb->update($config_table, array('value'=>$to_dept_values), array('id'=>$id_dipslay_department_to), array('%s'));?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="green"><b><?php echo __(" Selected Departments ", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("Saving ...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-department.js';?>"></script></center></p><?php }# ==============================================================================================# Save License Key - osT-Licensekey # ==============================================================================================if(isset($_REQUEST['ost-licensekey'])) {	 $key4ce_licensekey=trim($_POST['key4ce_licensekey']);	 $key4ce_licenseemail=trim($_POST['key4ce_licenseemail']);	 $key4ce_platform=trim($_POST['key4ce_platform']);	 $key4ce_instance_secure=trim($_POST['key4ce_instance']);	 $key4ce_platform=get_site_url();	 if($key4ce_instance_secure=="")	 {		 $key4ce_license_instance=wp_generate_password(20, false );	 }	 else	 {		 $key4ce_license_instance=trim($_POST['key4ce_instance']);	 }	if($_POST['ost-licensekey']=="Active License")	{		 $data_url=get_site_url()."?wc-api=software-api&request=activation&email=".$key4ce_licenseemail."&licence_key=".$key4ce_licensekey."&product_id=123&platform=".$key4ce_platform."&instance=".$key4ce_license_instance;		 $response_data = wp_remote_get($data_url);		 $res_data=json_decode($response_data['body']);	}	else if($_POST['ost-licensekey']=="Deactive License")	{		 $data_url=get_site_url()."?wc-api=software-api&request=deactivation&email=".$key4ce_licenseemail."&licence_key=".$key4ce_licensekey."&product_id=123&instance=".$key4ce_instance_secure."&platform=".$key4ce_platform;		 $response_data = wp_remote_get($data_url);		 $res_data=json_decode($response_data['body']);	}	 if($res_data->activated==1)	 {		 $expirydate=strtotime('+1 years', $res_data->timestamp);		 $licensedata=$key4ce_licensekey."|".$key4ce_licenseemail."|activated"."|".$expirydate."|".$key4ce_license_instance;		 //$licensedata=$key4ce_licensekey."|".$key4ce_licenseemail."|activated";		 $ost_wpdb->update($config_table, array('value'=>$licensedata), array('id'=>$id_key4celicensekey), array('%s'));	 }	 else if($res_data->activated=="" && $res_data->code=="103")	 {		 $licensedata=$key4ce_licensekey."|".$key4ce_licenseemail."|error103";		 $ost_wpdb->update($config_table, array('value'=>$licensedata), array('id'=>$id_key4celicensekey), array('%s'));	 }	 else if($res_data->activated=="" && $res_data->code=="101")	 {		 		 $licensedata=$key4ce_licensekey."|".$key4ce_licenseemail."|error101";		 $ost_wpdb->update($config_table, array('value'=>$licensedata), array('id'=>$id_key4celicensekey), array('%s'));	 }	 else if($res_data->reset=="true")	 {		 		 $licensedata=$key4ce_licensekey."|".$key4ce_licenseemail."|reset";		 $ost_wpdb->update($config_table, array('value'=>$licensedata), array('id'=>$id_key4celicensekey), array('%s'));	 } ?><p align="center"><i><?php echo __("Stand by while your", 'key4ce-osticket-bridge'); ?><font color="green"><b><?php echo __(" Activationg your license... ", 'key4ce-osticket-bridge'); ?></b></font><?php echo __("Saving ...", 'key4ce-osticket-bridge'); ?></i><br /><center><script language="javascript" src="<?php echo plugin_dir_url(__FILE__).'../js/adminTB-licensekey.js';?>"></script></center></p><?php }